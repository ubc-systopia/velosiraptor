/// 2022 Systopia Lab, Computer Science, University of British Columbia. All rights reserved.


// Interface Definitions for `X86MMU`

// THIS FILE IS AUTOGENERATED BY THE VELOSIRAPTOR COMPILER



#ifndef X86MMU_INTERFACE_H_
#define X86MMU_INTERFACE_H_ 1


#include "types.h"

#include <os_mmio.h>

#include <os_registers.h>

#include <os_memory.h>

/// Unit Type `X86MMU`
/// @loc: ../../examples/x86_64_pagetable.vrs:409:1
struct x86mmu {
    uintptr_t base;
};

typedef struct x86mmu x86mmu__t;

#include "x86mmu/cr3_field.h"

#include "x86mmu/cr4_field.h"

// Reading interface fields

/// reads the `cr3` interface field
static inline x86mmu_cr3__t x86mmu_cr3__rd(x86mmu__t * unit) {
    x86mmu_cr3__t val;
    val = x86mmu_cr3__set_raw(os_mmio_register_read_64(local_phys_to_mem((unit)->base), 0x0));
    return val;
}

/// reads the value `cr3.pcid` from the interface
static inline uint16_t x86mmu_cr3_pcid__rd(x86mmu__t * unit) {
    x86mmu_cr3__t val;
    val = x86mmu_cr3__rd(unit);
    return x86mmu_cr3_pcid__extract(val);
}

/// reads the value `cr3.address` from the interface
static inline uint64_t x86mmu_cr3_address__rd(x86mmu__t * unit) {
    x86mmu_cr3__t val;
    val = x86mmu_cr3__rd(unit);
    return x86mmu_cr3_address__extract(val);
}

// Writing interface fields

/// writes the `cr3` interface field
static inline void x86mmu_cr3__wr(x86mmu__t * unit, x86mmu_cr3__t val) {
    os_mmio_register_write_64(local_phys_to_mem((unit)->base), 0x0, x86mmu_cr3__get_raw(val));
}

/// writes the value `cr3.pcid` from the interface
static inline void x86mmu_cr3_pcid__wr(x86mmu__t * unit, uint16_t val) {
    x86mmu_cr3__t field;
    field = x86mmu_cr3__rd(unit);
    field = x86mmu_cr3_pcid__insert(field, val);
    x86mmu_cr3__wr(unit, field);
}

/// writes the value `cr3.address` from the interface
static inline void x86mmu_cr3_address__wr(x86mmu__t * unit, uint64_t val) {
    x86mmu_cr3__t field;
    field = x86mmu_cr3__rd(unit);
    field = x86mmu_cr3_address__insert(field, val);
    x86mmu_cr3__wr(unit, field);
}

// Reading interface fields

/// reads the `cr4` interface field
static inline x86mmu_cr4__t x86mmu_cr4__rd(x86mmu__t * unit) {
    x86mmu_cr4__t val;
    val = x86mmu_cr4__set_raw(os_mmio_register_read_32(local_phys_to_mem((unit)->base), 0x8));
    return val;
}

/// reads the value `cr4.enabled` from the interface
static inline uint8_t x86mmu_cr4_enabled__rd(x86mmu__t * unit) {
    x86mmu_cr4__t val;
    val = x86mmu_cr4__rd(unit);
    return x86mmu_cr4_enabled__extract(val);
}

// Writing interface fields

/// writes the `cr4` interface field
static inline void x86mmu_cr4__wr(x86mmu__t * unit, x86mmu_cr4__t val) {
    os_mmio_register_write_32(local_phys_to_mem((unit)->base), 0x8, x86mmu_cr4__get_raw(val));
}

/// writes the value `cr4.enabled` from the interface
static inline void x86mmu_cr4_enabled__wr(x86mmu__t * unit, uint8_t val) {
    x86mmu_cr4__t field;
    field = x86mmu_cr4__rd(unit);
    field = x86mmu_cr4_enabled__insert(field, val);
    x86mmu_cr4__wr(unit, field);
}

#endif // X86MMU_INTERFACE_H_
