state() {
    reg foo [ 8 ]
}

state(base: addr) {
    mem foo [ base, 8, 8 ]
}

// two fields
state(base: addr) {
    mem foo [ base, 8, 8 ],
    reg bar [ 8 ]
}

state(base: addr) {
    reg foo [ 8 ],
    reg bar [ 8 ]
}

state(base: addr) {
    mem foo [ base, 0, 8 ],
    mem bar [ base, 8, 8 ],
}

// with slices

state() {
    reg foo [ 8 ] {
        0..64 val
    }
}

state(base: addr) {
    reg foo [ 8 ] {
        0..32 val,
        32 .. 64 val2
    }
}

state() {
    mem foo [ base, 8, 8 ] {
        0..64 val
    }
}

state(base: addr) {
     mem foo [ base, 8, 8 ] {
        0..32 val,
        32 .. 64 val2
    }
}

state(base: addr) {
     mem foo [ base, 8, 8 ] {
        0..32 val,
        32 .. 64 val2,
    }
}

state(base: addr) {
     mem foo [ base, 0, 8 ] {
        0..32 val,
        32 .. 64 val2
    },
     mem bar [ base, 8, 8 ] {
        0..32 val,
        32 .. 64 val2
    }
}